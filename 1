CSCC63 A4

(a)
WIFI: Given a graph G which represents the office location as question described and an positive integer k, is it possible to a set of vertex of size k such that all office can be covered by routers?
Prove WIFI is NP - complete:
Prove WIFI is NP : Given  a set of vertices S and a graph g, we add the vertices which are related by the elements in S by edges to S,then check if the element of S equal the vertices of graph g.
Prove WIFI is NP-hard: We will reduce VERTEX-COVER to this problem.Given a graph G on n nodes,we define a office i for each node vi, and the distance of 2 offices is less than R if these 2 nodes have edge in G.Now, if there is an VERTEX-COVER of G,we can place all the routers corresponding to vertices in the set.And because of the property of VERTEX-COVER,the routers will cover all the offices for sure.At last, let k equal the size of set. Conversely, if there is a way to place at most k routers on the offices,and all offices will be covered by WIFI, this give a VERTEX-COVER of G.
(b)
WIFI-SEARCH:Given a graph G which represents the office location as question described and an positive integer k,find a set of vertex of size k such that all office can be covered by routers,if one exists.
Prove WIFI-SEARCH is poly-time self-reducible:
WIFI-SEARCH(G,k):
           if !(WIFI(G,k))
               return null  //  no k-router-set in G 
           C = {} // the vertices in the WIFI set of G
           For each vertex v ∈ V and while k >0:
	 If (WIFI(G-v,k-1)):
	      C = C ∪ v;
	       G = G-v
                       K = k -1
             Return C
Correctness:
G contains a WIFI-set of size k iff G-v contains a WIFI-set of size (k-1). Then if G-v contains a WIFI-set of size (k-1), let C be a WIFI-set of size (k-1) in G – {v}, then C ∪ {v} is the WIFI-set of size k in G. Hence, the output is a WIFI-set of size k of G.
Running Time: 
for each vertex v, we perform one call to VC in time T(n,m) and compute G-{v} in time O(n+m).So the total time is O((n)*T(n,m) + n*(n+m)).
(c)
Prove MIN_WIFI is polytime self-reducible:
Given graph G of n nodes, binary search in range [1,n] by making calls to WIFI(G,k) for various values of k,in order to find the minimum k such that G contains a k-WIFI-set but bot (k-1)-WIFI-set.Then,use search algorithm to find k-WIFI-set .Hence the output is  optimal value.
(d)

