CSCC63 A4

(a)
WIFI: Given a graph G which represents the office location as question described and an positive integer k, is it possible to a set of vertex of size k such that all office can be covered by routers?
Prove WIFI is NP - complete:
Prove WIFI is  NP : Given  a set of vertices S and a graph g, we add the vertices which are related by the elements in S by edges to S,then check if the element of S equal the vertices of graph g.
Prove WIFI is NP-hard: We will reduce VERTEX-COVER to this problem.Given a graph G on n nodes,we define a office i for each node vi, and the distance of 2 offices is less than R if these 2 nodes have edge in G.Now, if there is an VERTEX-COVER of G,we can place all the routers corresponding to vertices in the set.And because of the property of VERTEX-COVER,the routers will cover all the offices for sure.At last, let k equal the size of set. Conversely, if there is a way to place at most k routers on the offices,and all offices will be covered by WIFI, this give a VERTEX-COVER of G.
(b)
WIFI-SEARCH:Given a graph G which represents the office location as question described and an positive integer k,find a set of vertex of size k such that all office can be covered by routers,if one exists.
Prove WIFI-SEARCH is poly-time self-reducible:
WIFI-SEARCH(G,k):
           if !(WIFI(G,k))
               return null // no k-router-set in G 
          for each vertex v of V
               V’ = V - {v}
               E’ = E - {(u,v): u belong to V}
               if (WIFI (G’ = (V’,E’) ,k) )
                    V = V’
                    E = E’
           return V
WIFI(G,k) remains true at every step so at the end,V contains every vertex in a k-WIFISet of G. All other vertices will be removed because they are not required, so V will contain no other vertices. Hence, the output is a k-WIFISet of G.
Running Time: Each vertex of G examined once, and one call to WIFI for each one, plus linear amount of additional work (removing edges).  Total is O(n*t(n,m) + n*(n+m)) where t(n,m) is runtime of WIFI on graphs with n vertices and m edges; this is polytime if t(n,m) is polytime.
(c)

	
